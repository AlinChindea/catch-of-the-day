{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","base.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.99796ab9.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-GB\", {\n    style: \"currency\",\n    currency: \"GBP\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"lions\",\n    \"penguins\",\n    \"hippos\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"leprechauns\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n  \n  myInput = React.createRef();\n  \n  goToStore = event =>  {\n    // 1. stop the form from submitting on load\n    event.preventDefault();\n    // 2. get the text from the user's input\n    const storeName = this.myInput.current.value;\n    // 3. change the page to /store/whatever-input-entered\n    this.props.history.push(`/store/${storeName}`);\n  }\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input \n          type=\"text\"\n          ref={this.myInput} \n          required \n          placeholder=\"Store Name\" \n          defaultValue={getFunName()} \n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => ( \n  <header className=\"top\">\n    <h1>\n\t\t\t\t\tCatch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n\t\t\t\t\tDay\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n  \nexport default Header;\n","import React from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }; \n  \n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order', \n      key, \n      timeout: { enter: 500, exit: 500}\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n    if(!isAvailable) {\n      return (\n        <CSSTransition { ...transitionOptions}>\n          <li key={key}>\n        Sorry, {fish ? fish.name : 'fish' } is no longer available.\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition { ...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition \n                classNames=\"count\" \n                key={count} \n                timeout={{ enter: 5000, exit: 5000}}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup> \n          kg {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n            &times;\n            </button>\n          </span>\n        </li>\n\n      </CSSTransition>\n      \n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n\n      return prevTotal;\n    }, 0);\n    return <div className=\"order-wrap\">\n      <h2>Order</h2>\n      <TransitionGroup component='ul' className=\"order\">\n        {orderIds.map(this.renderOrder)}\n      </TransitionGroup>\n      <div className=\"total\">\n      Total: \n        <strong>{formatPrice(total)}</strong>\n      </div>\n      <ul>\n        <li></li>\n      </ul>\n\n    </div>;\n  }\n}\n\nexport default Order;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyA4doki6OYn-ZC7tyk1IrzV_I9TzElPtTw',\n  authDomain: 'catch-of-the-day-alin-ch.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-alin-ch.firebaseio.com'\n});\n\n//create our Rebase bindings -> database() is a function that will return our actual db\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export \nexport { firebaseApp };\n\n// default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm  extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n      addFish: PropTypes.func\n    };\n\n    createFish = event => {\n      event.preventDefault();\n      const fish = {\n        name: this.nameRef.current.value,\n        price: parseFloat(this.priceRef.current.value),\n        status: this.statusRef.current.value,\n        desc: this.descRef.current.value,\n        image: this.imageRef.current.value\n      };\n      this.props.addFish(fish);\n      //   refresh the form\n      event.currentTarget.reset();\n    };\n    render() {\n      return (\n        <form className=\"fish-edit\" onSubmit={this.createFish}>\n          < input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\n          < input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\n          < select name=\"status\" ref={this.statusRef}>\n            <option value=\"available\">Fresh!</option>\n            <option value=\"unavailable\">Sold Out!</option>\n          </select>\n          < textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n          < input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n          <button type=\"submit\">Add Fish</button>\n        </form>\n      );\n    }\n}\n\nexport default AddFishForm ;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }), \n    index: PropTypes.string,\n    updateFish: PropTypes.func\n\n  };\n    handleChange = (event) => {\n      // update that fish\n      // 1. Take a cop of the current fish\n      const updatedFish = { \n        ...this.props.fish,\n        [event.currentTarget.name]: event.currentTarget.value \n      };\n      // sending changes upstream to our app component where our state lives\n      this.props.updateFish(this.props.index, updatedFish);\n    };\n    render() {\n      return <div className=\"fish-edit\">\n        <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n        <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n        <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status} >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} ></textarea>\n        <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n        <button \n          onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove fish\n        </button>\n      </div>;\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button \n      className=\"github\" \n      onClick={() => props.authenticate('Github')}\n    >\n        Log in with GitHub\n    </button>\n    <button \n      className=\"facebook\" \n      onClick={() => props.authenticate('Facebook')}\n    >\n        Log in with Facebook\n    </button><button \n      className=\"twitter\" \n      onClick={() => props.authenticate('Twitter')}\n    >\n        Log in with Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport base, { firebaseApp } from '../base';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    // 1. look up current store in the firebase db\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // 2. claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null});\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log out</button>;\n\n\n    // 1. check if user is logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // 2. check if user is not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner of this store</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. they must be the owner so render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm \n            key={key}\n            index={key} \n            fish={this.props.fishes[key]} \n            updateFish={this.props.updateFish} \n            deleteFish={this.props.deleteFish} \n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  }\n  render() {\n    const {image, name, price, desc, status} = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name}/>\n        <h3 className=\"fish-name\">\n          {this.props.details.name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button \n          disabled={!isAvailable} \n          onClick={() => this.props.addToOrder(this.props.index)}>\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\nimport PropTypes from 'prop-types';\n\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    // reference to the db - to the storename and the fishes object which contains and mirrors our state\n    const { params } = this.props.match;\n    // first reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    \n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    }); \n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId, \n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    //when we leave our store, unmount our db reference\n    base.removeBinding(this.ref);\n  }\n  \n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes};\n    // 2. Add our new fish to the new fishes variable\n    fishes[`fish${Date.now}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current fish\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes};\n    // 2. update the state \n    fishes[key] = null;\n    // 3. update stae\n    this.setState({ fishes });\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = {...this.state.order};\n    // 2. either add to order or update number in order\n    order[key] = order[key] + 1 || 1;\n    // 3. call setState to update our state object\n    this.setState({ order });\n  }\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = {...this.state.order};\n    // 2. remove that item from order\n    delete order[key];\n    // 3. call setState to update our state object\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish \n                key={key}\n                index={key} \n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order \n          fishes={this.state.fishes} \n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory \n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>404 - Not Found</h2>\n    </div>\n); \n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}